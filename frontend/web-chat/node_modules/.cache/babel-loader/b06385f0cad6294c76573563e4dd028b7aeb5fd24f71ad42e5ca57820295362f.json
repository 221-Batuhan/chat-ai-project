{"ast":null,"code":"var _jsxFileName = \"/Users/batuhanacan/Desktop/chat-ai-project/frontend/web-chat/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  apiUrl\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const messagesEndRef = useRef(null);\n  const fetchMessages = async () => {\n    const res = await fetch(`${apiUrl}/api/messages?t=${Date.now()}`, {\n      cache: \"no-store\"\n    });\n    const data = await res.json();\n    setMessages(data);\n  };\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!text.trim()) return;\n    setSending(true);\n    try {\n      const res = await fetch(`${apiUrl}/api/messages`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          nickname: \"batuhan\",\n          text\n        })\n      });\n      if (!res.ok) throw new Error(`POST failed: ${res.status}`);\n      const created = await res.json();\n      // optimistic append so message doesn't flicker/disappear\n      setMessages(prev => [created, ...prev]);\n      setText(\"\");\n      // kick a refresh to get updated sentiment shortly after\n      setTimeout(fetchMessages, 1200);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setSending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chat-title\",\n      children: \"Chat AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.nickname === \"batuhan\" ? \"own-message\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-avatar\",\n          children: (msg.nickname || \"?\")[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-nickname\",\n              children: msg.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `chat-sentiment ${msg.sentiment || \"pending\"}`,\n              title: \"Duygu Analizi\",\n              children: msg.sentiment || \"analysing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        type: \"text\",\n        placeholder: \"Mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-send-btn\",\n        onClick: sendMessage,\n        disabled: sending,\n        children: \"G\\xF6nder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"AZIvo8iIzN4EqTs7WSODi3BbTbk=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","apiUrl","_s","messages","setMessages","text","setText","sending","setSending","messagesEndRef","fetchMessages","res","fetch","Date","now","cache","data","json","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","method","headers","body","JSON","stringify","nickname","ok","Error","status","created","prev","setTimeout","e","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","toUpperCase","sentiment","title","id","ref","type","placeholder","value","onChange","target","onKeyDown","key","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/batuhanacan/Desktop/chat-ai-project/frontend/web-chat/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\n\nexport default function Chat({ apiUrl }) {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const fetchMessages = async () => {\n    const res = await fetch(`${apiUrl}/api/messages?t=${Date.now()}`, {\n      cache: \"no-store\",\n    });\n    const data = await res.json();\n    setMessages(data);\n  };\n\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!text.trim()) return;\n    setSending(true);\n    try {\n      const res = await fetch(`${apiUrl}/api/messages`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        nickname: \"batuhan\",\n        text,\n      }),\n      });\n      if (!res.ok) throw new Error(`POST failed: ${res.status}`);\n      const created = await res.json();\n      // optimistic append so message doesn't flicker/disappear\n      setMessages((prev) => [created, ...prev]);\n      setText(\"\");\n      // kick a refresh to get updated sentiment shortly after\n      setTimeout(fetchMessages, 1200);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setSending(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2 className=\"chat-title\">Chat AI</h2>\n      <div className=\"chat-messages\">\n        {messages.map((msg) => (\n          <div\n            key={msg.id}\n            className={`chat-message ${\n              msg.nickname === \"batuhan\" ? \"own-message\" : \"\"\n            }`}\n          >\n            <div className=\"chat-avatar\">\n              {(msg.nickname || \"?\")[0].toUpperCase()}\n            </div>\n            <div className=\"chat-content\">\n              <div className=\"chat-header\">\n                <span className=\"chat-nickname\">{msg.nickname}</span>\n                <span className={`chat-sentiment ${msg.sentiment || \"pending\"}`} title=\"Duygu Analizi\">\n                  {msg.sentiment || \"analysing\"}\n                </span>\n              </div>\n              <div className=\"chat-text\">{msg.text}</div>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"chat-input-area\">\n        <input\n          className=\"chat-input\"\n          type=\"text\"\n          placeholder=\"Mesajınızı yazın...\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n        />\n        <button className=\"chat-send-btn\" onClick={sendMessage} disabled={sending}>\n          Gönder\n        </button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}